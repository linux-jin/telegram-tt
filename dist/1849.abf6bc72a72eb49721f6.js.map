{"version":3,"file":"1849.abf6bc72a72eb49721f6.js","mappings":"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CCkCA,MAAMwb,EAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GA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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isTopicInfo, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, isTopicInfo, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo, selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  }, [hideSpoiler, message, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon-message-failed\" />\n          </div>\n        ) : <i className={`icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo\n    || user?.fullInfo?.personalPhoto\n    || userOrChat?.fullInfo?.profilePhoto\n    || user?.fullInfo?.fallbackPhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectTabState,\n  selectChat, selectCurrentMessageList, selectThreadMessagesCount, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && user?.fullInfo?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(user.fullInfo.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && user?.fullInfo?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={user.fullInfo.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(user.fullInfo.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useDynamicColorListener from '../../hooks/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const { rgbColor: customColor } = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => {\n      return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n    },\n    [isStatusPicker],\n  );\n\n  const getLayout = () => ({ withPortal: isStatusPicker });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const handleEmojiStatusExpiresClick = useCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  }, [setEmojiStatus, sticker, handleContextMenuClose, onContextMenuClick]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n        customColor={customColor}\n      />\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !isMobile && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectTopicFromMessage,\n  selectThreadParam, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          {Boolean(archiveUnreadCount) && (\n            <div className={styles.unreadCount}>\n              <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            {Boolean(archiveUnreadCount) && (\n              <div className=\"Badge\">\n                <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  }, [closeForumPanel, onLeftColumnContentChange]);\n\n  const handleArchivedDragEnter = useCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  }, [handleArchivedClick]);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { fastRaf } from '../../../util/schedulers';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n  animationLevel?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  animationLevel,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  useEffect(() => {\n    if (animationLevel === ANIMATION_LEVEL_MIN && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [animationLevel, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      fastRaf(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, () => {\n          dispatchHeavyAnimationStop();\n        });\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        animationLevel === ANIMATION_LEVEL_MIN && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    e.preventDefault();\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n            onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n        onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport { ARE_CALLS_SUPPORTED, IS_PWA } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsUserBlocked,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  isActive?: boolean,\n) {\n  const { rgbColor: textColor } = useDynamicColorListener(inputRef);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${textColor?.join(',') || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, textColor?.join(','),\n      ].filter(Boolean).join('_');\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor,\n      });\n      animation.play();\n\n      playersById.current.set(playerId, animation);\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  }, [absoluteContainerRef, textColor, inputRef, prefixId, clearPlayers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    fastRaf(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive]);\n\n  useEffectWithPrevDeps(([prevTextColor]) => {\n    if (textColor !== prevTextColor) {\n      synchronizeElements();\n    }\n  }, [textColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    playersById.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: [number, number, number];\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      viewId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      customEmoji.shouldUseTextColor ? textColor : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    isActive,\n  );\n\n  const maxInputHeight = isMobile ? 256 : 416;\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : maxInputHeight;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput, maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText && <i className=\"icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuPosition from '../../../hooks/useContextMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    shouldUpdateStickerSetsOrder?: boolean\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  }, [closeBotCommandMenu, closeSendAsMenu, openSymbolMenu]);\n\n  const handleSearchOpen = useCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  }, [setStickerSearchQuery, setGifSearchQuery]);\n\n  const handleSymbolMenuOpen = useCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  }, [isAttachmentModal, isMobile, openSymbolMenu, closeBotCommandMenu]);\n\n  const getTriggerElement = useCallback(() => triggerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals .SymbolMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => ({\n    withPortal: true,\n  }), []);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon-smile\" />\n          <i className=\"icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useCallback, useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  }, [getLastEmoji, isEnabled, inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, []);\n\n  const insertEmoji = useCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  }, [getHtml, setHtml, inputId, updateFiltered]);\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  }, [inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction = MenuItemContextActionItem | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched, href]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, useCallback, memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  }, [onActivate]);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  }, [onActivate]);\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default memo(ResponsiveHoverButton);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        tabEl.classList.add(classNames.active);\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nexport function useThrottledResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n\nexport function useDebouncedResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false, noLast = false) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/windowEnvironment';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    const left = (horizontalPosition === 'left'\n      ? (withPortal\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  const handleForumPanelAnimationStart = useCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  }, []);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import type { RLottieApi } from './rlottie.worker';\n\nimport {\n  DPR, IS_SAFARI, IS_ANDROID, IS_IOS,\n} from '../../util/windowEnvironment';\nimport { createConnector } from '../../util/PostMessageConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\nimport generateIdFor from '../../util/generateIdFor';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\nconst ID_STORE = {};\n\nconst instancesByRenderId = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => createConnector<RLottieApi>(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private views = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [\n      , canvas,\n      renderId,\n      viewId = generateIdFor(ID_STORE, true),\n      params, ,\n      onLoad,\n    ] = args;\n    let instance = instancesByRenderId.get(renderId);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesByRenderId.set(renderId, instance);\n    } else {\n      instance.addView(viewId, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    private tgsUrl: string,\n    private container: HTMLDivElement | HTMLCanvasElement,\n    private renderId: string,\n    private viewId: string = generateIdFor(ID_STORE, true),\n    private params: Params = {},\n    private customColor?: [number, number, number],\n    private onLoad?: NoneToVoidFunction | undefined,\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addView(viewId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeView(viewId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.views.get(viewId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.views.delete(viewId);\n\n    if (!this.views.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.views.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setSharedCanvasCoords(viewId: string, newCoords: Params['coords']) {\n    const containerInfo = this.views.get(viewId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addView(\n    viewId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.views.set(viewId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.views.set(viewId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesByRenderId.delete(this.renderId);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.renderId],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.views.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.views.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.renderId, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      delete container.dataset.scrollId;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<b>$3</b>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<i>$3</i>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<s>$3</s>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$3</span>$5`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","activeGroupCallId","selectTabState","isMasterTab","groupCalls","undefined","usersById","users","byId","chatsById","chats","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","_ref2","isUser","user","Boolean","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","current","prevText","elements","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","styles","style","buildStyle","src","onLoad","AnimatedIcon","noTransition","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","withVideo","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","VerifiedIcon","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","FakeIcon","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","canClose","clickArg","InputText","InfiniteScroll","items","Checkbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","personalPhoto","profilePhoto","fallbackPhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","renderPhotoTabs","renderPhoto","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","noAnimate","noContextMenu","isStatusPicker","canViewSet","isCurrentUserPremium","noShowPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","rgbColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","getLayout","withPortal","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","Menu","autoClose","iconEmojiId","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","isForumPanelActive","selectIsForumPanelOpen","Badge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","AvatarBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","RESERVED_HOTKEYS","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","openNextChat","closeForumPanel","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","newTabActionSeparator","isSeparator","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","ANIMATION_LEVEL_MIN","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","fastRaf","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","isSpoiler","renderSummary","opacity","classList","remove","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","reduce","prevOrderById","prevChatId","mapValues","order","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","DropTarget","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","THROTTLE_MS","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","captionLimit","isAttachmentModalInput","editableInputId","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","prefixId","textColor","playersById","Map","clearPlayers","ids","player","get","delete","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","animation","viewId","isLottie","lottie","RLottie","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevTextColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","exec","toggle","htmlRef","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","canSendGifs","canSendStickers","isReady","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","b","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","inputId","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","blobToDataUri","bind","err","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","children","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","onSecondaryIconClick","markIsTouched","unmarkIsTouched","handleClickEvent","MouseButton","handleSecondaryIconClick","handleMouseDown","ButtonElementTag","RippleEffect","MenuSeparator","DEFAULT_DURATION","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","hidden","loadingOption","Radio","step","renderValue","mainClassName","trackWidth","index","openTimeout","isFirstTimeActivation","buttonProps","isMouseInside","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","_tab$id","Tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","resolver","deps","ms","noFirst","setValue","useDebouncedResolver","noLast","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","capture","emulateContextMenuEvent","passive","MENU_POSITION_VISUAL_COMFORT_SPACE_PX","MENU_POSITION_BOTTOM_MARGIN","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","getComputedStyle","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","menuMaxHeight","offsetX","offsetY","resolverOrDependency","_dependencies","isAsync","getValue","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","isConnected","useUniqueId","idRef","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","callback","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","ID_STORE","instancesByRenderId","workers","createConnector","Worker","URL","lastWorkerIndex","static","_len","args","_key","params","instance","addView","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","views","clearRect","imgSize","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","playSegment","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","ImageData","isRendererInited","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","request","onRendererInit","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","ConnectorClass","channel","init","postMessage","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","getPatternColor","hue","saturation","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","scrollTop","offset","FocusDirection","calculateScrollFrom","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","stopById","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","MAX_TAG_DEEPNESS","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","parseMarkdown","RE_LINK_TEMPLATE","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","getEntityDataFromNode","hasChildNodes","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}